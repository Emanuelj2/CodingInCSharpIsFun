// <auto-generated />
using System;
using MVCApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250929124241_seedDataForInvoices")]
    partial class seedDataForInvoices
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCApplication.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            ClientName = "Client A",
                            DueDate = new DateOnly(2023, 1, 15),
                            Email = "exmaple1@ecample.com",
                            IssueDate = new DateOnly(2023, 1, 1),
                            Number = "INV-001",
                            Phone = "123-456-7890",
                            Quantity = 1,
                            Service = "Web Design",
                            Status = "Paid",
                            UnitPrice = 500.00m
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            ClientName = "Client B",
                            DueDate = new DateOnly(2023, 2, 15),
                            Email = "example2@example.com",
                            IssueDate = new DateOnly(2023, 2, 1),
                            Number = "INV-002",
                            Phone = "987-654-3210",
                            Quantity = 1,
                            Service = "SEO Services",
                            Status = "Unpaid",
                            UnitPrice = 300.00m
                        });
                });

            modelBuilder.Entity("MVCApplication.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            Name = "Product 1",
                            Price = 10.0m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 2",
                            Name = "Product 2",
                            Price = 20.0m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description 3",
                            Name = "Product 3",
                            Price = 30.0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
